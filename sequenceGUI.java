package gui7;

import javax.swing.JOptionPane;


/**
 *
 * @author manu
 */
public class assignment2 extends javax.swing.JFrame {

	public boolean spacing10 = false;
	public boolean capitalization = false;
	public int lineLength;
	public String s;

    public assignment2() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    private void initComponents() {

        jCheckBox1 = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Number Addition");

        jCheckBox1.setText("Groups of 10?");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jButton1.setText("Reset");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Process");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane3.setViewportView(jTextArea2);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel1.setText("Enter Sequence:");

        jLabel2.setText("Processed Sequence:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "40", "50", "60", "70" }));
        jComboBox1.setSelectedIndex(2); ////Indices start at 0, so 2 is 60
        
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                
                final String s = (String) jComboBox1.getSelectedItem();//get the selected item

                switch (s) {//check for a match
                    case "60":
                        lineLength = 1;
                        break;
                    case "40":
                        lineLength = 2;
                        break;
                    case "50":
                        lineLength = 3;
                        break;
                    case "70":
                        lineLength = 4;
                        break;
                }
                

            
            
            }
        });

        jRadioButton1.setText("Uppercase");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jRadioButton2.setText("Lowercase");
        jRadioButton2.setSelected(true);
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });


        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jScrollPane2.setViewportView(jTextArea3);

        jLabel3.setText("Statistics:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox1)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addComponent(jButton2))))
                .addGap(129, 129, 129))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 699, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(126, 126, 126)
                        .addComponent(jLabel3)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 730, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 730, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jRadioButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jRadioButton2))
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }                      

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
        
        if(jCheckBox1.isSelected() == true)
            spacing10 = true;
        else
            spacing10 = false;
                
    }                                          
    //For displaying error messages
    private void displayErrMsg(String msg) {
        JOptionPane.showMessageDialog(null,
                msg,
                "Error message",
                JOptionPane.ERROR_MESSAGE);
    }
    //For displaying confirmation message to reset
    private boolean displayCfmMsg() {
        int n = JOptionPane.showConfirmDialog(
                null,
                "Would you like to reset everything?",
                "Reset",
                JOptionPane.YES_NO_CANCEL_OPTION);
        //a YES_NO_OPTION dialog always returns one of the following values: YES_OPTION, NO_OPTION, or CLOSED_OPTION.
        if (n == JOptionPane.YES_OPTION) {
            return true;
        } else {
            return false;
        }
    }
    private boolean isValidSeq(String inSequence) {
        /*any characters other than a,c,g,t, in either upper or lower case plus new lines) 
         * display an appropriate error message in a message dialog */
        if (inSequence.matches("[acgtACGT\\n\\r]+")) {
            return true;
        } else {
            displayErrMsg("Sequence should contain only a,c,g,t and new line characters, not even spaces");
            return false;
        }
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        boolean resetyes = displayCfmMsg();
        if (resetyes) {
            jTextArea1.setText("");
            jTextArea2.setText("");
            jTextArea3.setText("");
        }
    }  

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         

        String inputSequence = null;
        String outputSequence = null;
        String statistics1 = null;
        String countSequence = null;
        int noA = 0;
        int noC = 0;
        int noG = 0;
        int noT = 0;

        inputSequence = jTextArea1.getText();
        countSequence = inputSequence.toUpperCase();
        int seqLength = countSequence.length();
        
        for( int i=0; i<seqLength; i++ ) {
            if( countSequence.charAt(i) == 'A' ) {
                noA++;
            } 
        }
        for( int i=0; i<seqLength; i++ ) {
            if( countSequence.charAt(i) == 'C' ) {
                noC++;
            } 
        }
        for( int i=0; i<seqLength; i++ ) {
            if( countSequence.charAt(i) == 'G' ) {
                noG++;
            } 
        }
        for( int i=0; i<seqLength; i++ ) {
            if( countSequence.charAt(i) == 'T' ) {
                noT++;
            } 
        }        
        
        // check if input sequence is valid
        boolean isvalid = isValidSeq(inputSequence);
        if (isvalid) 
        {
            if(capitalization == true) 
            {
                outputSequence = inputSequence.toUpperCase();
            } else {
                outputSequence = inputSequence.toLowerCase();
            }
            //remove all existing new lines from sequence
            outputSequence = outputSequence.replace("\n", "");
            System.out.println("Sequence = "+outputSequence);
            jLabel3.setText("Total sequence length="+outputSequence.length());
            
            int charsperline = 0;
            int idx = jComboBox1.getSelectedIndex();
            switch(idx) {
                case 0: // 40
                        charsperline=40;
                        break;
                case 1: // 50
                        charsperline=50;
                        break;
                case 2: // 60
                        charsperline=60;
                        break;
                case 3: // 70
                        charsperline=70;
                        break;
            }
            outputSequence = outputSequence.replaceAll(".{"+charsperline+"}", "$0\n");
            
            if(spacing10 == true)
            {
                outputSequence = outputSequence.replaceAll(".{10}", "$0 ");
            }
            
            float pctA = (float)((noA*100)/seqLength);
            float pctC = (float)((noC*100)/seqLength);
            float pctG = (float)((noG*100)/seqLength);
            float pctT = (float)((noT*100)/seqLength);

            
            statistics1 = "Number of Adenine: "+noA
            		+"\nPercentage of Adenine: "+pctA+"%"
            		+"\nNumber of Cytosine: "+noC
            		+"\nPercentage of Cytosine: "+pctC+"%"
            		+"\nNumber of Guanine: "+noG
            		+"\nPercentage of Guanine: "+pctG+"%"
            		+"\nNumber of Thymine: "+noT
            		+"\nPercentage of Thymine: "+pctT+"%"
            		+"\nLength of Sequence: "+outputSequence.length()
            		+"\n";
            
            jTextArea2.setText(outputSequence);
            jTextArea3.setText(statistics1);
            System.out.println("Sequence length= "+outputSequence.length());
            
        }// sequence is valid
    }

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                                   

    	if(jRadioButton1.isSelected() == true)
        {
            capitalization = true;
            jRadioButton2.setSelected(false);
        }
    } 
                                             
    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                           
        
        if(jRadioButton2.isSelected() == true)
        {
            capitalization = false;
            jRadioButton1.setSelected(false);       
        }
    }
                                             

    private void elseif(boolean b) {
        // TODO Auto-generated method stub
        
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(assignment2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(assignment2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(assignment2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(assignment2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new assignment2().setVisible(true);
            }
        });
    }

    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
}
